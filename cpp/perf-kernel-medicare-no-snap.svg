<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="822" onload="init(evt)" viewBox="0 0 1200 822" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="822.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="805" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="805" > </text>
<g id="frames">
<g >
<title>default_idle_call (144 samples, 12.33%)</title><rect x="1043.5" y="613" width="145.5" height="15.0" fill="rgb(214,45,19)" rx="2" ry="2" />
<text  x="1046.51" y="623.5" >default_idle_call</text>
</g>
<g >
<title>alloc_pages_current (5 samples, 0.43%)</title><rect x="86.8" y="485" width="5.0" height="15.0" fill="rgb(231,215,13)" rx="2" ry="2" />
<text  x="89.78" y="495.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="53.4" y="629" width="1.1" height="15.0" fill="rgb(242,138,38)" rx="2" ry="2" />
<text  x="56.44" y="639.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (1 samples, 0.09%)</title><rect x="23.1" y="693" width="1.0" height="15.0" fill="rgb(217,114,24)" rx="2" ry="2" />
<text  x="26.13" y="703.5" ></text>
</g>
<g >
<title>proc_cgroup_show (1 samples, 0.09%)</title><rect x="10.0" y="597" width="1.0" height="15.0" fill="rgb(228,212,2)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>uv__io_poll (2 samples, 0.17%)</title><rect x="30.2" y="661" width="2.0" height="15.0" fill="rgb(243,64,41)" rx="2" ry="2" />
<text  x="33.21" y="671.5" ></text>
</g>
<g >
<title>filename_lookup (4 samples, 0.34%)</title><rect x="17.1" y="613" width="4.0" height="15.0" fill="rgb(253,120,35)" rx="2" ry="2" />
<text  x="20.07" y="623.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.09%)</title><rect x="53.4" y="453" width="1.1" height="15.0" fill="rgb(226,70,22)" rx="2" ry="2" />
<text  x="56.44" y="463.5" ></text>
</g>
<g >
<title>walk_component (4 samples, 0.34%)</title><rect x="17.1" y="581" width="4.0" height="15.0" fill="rgb(249,155,7)" rx="2" ry="2" />
<text  x="20.07" y="591.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.43%)</title><rect x="25.2" y="709" width="5.0" height="15.0" fill="rgb(234,61,45)" rx="2" ry="2" />
<text  x="28.15" y="719.5" ></text>
</g>
<g >
<title>do_syscall_64 (43 samples, 3.68%)</title><rect x="54.5" y="693" width="43.4" height="15.0" fill="rgb(221,224,43)" rx="2" ry="2" />
<text  x="57.45" y="703.5" >do_s..</text>
</g>
<g >
<title>__do_execve_file.isra.0 (2 samples, 0.17%)</title><rect x="33.2" y="677" width="2.1" height="15.0" fill="rgb(209,67,42)" rx="2" ry="2" />
<text  x="36.24" y="687.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="30.2" y="421" width="1.0" height="15.0" fill="rgb(237,61,0)" rx="2" ry="2" />
<text  x="33.21" y="431.5" ></text>
</g>
<g >
<title>task_work_run (1 samples, 0.09%)</title><rect x="23.1" y="677" width="1.0" height="15.0" fill="rgb(238,46,14)" rx="2" ry="2" />
<text  x="26.13" y="687.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (1 samples, 0.09%)</title><rect x="91.8" y="405" width="1.0" height="15.0" fill="rgb(213,114,38)" rx="2" ry="2" />
<text  x="94.83" y="415.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (1 samples, 0.09%)</title><rect x="93.9" y="437" width="1.0" height="15.0" fill="rgb(236,227,32)" rx="2" ry="2" />
<text  x="96.85" y="447.5" ></text>
</g>
<g >
<title>node::Start (3 samples, 0.26%)</title><rect x="30.2" y="725" width="3.0" height="15.0" fill="rgb(230,115,49)" rx="2" ry="2" />
<text  x="33.21" y="735.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="149" width="1.0" height="15.0" fill="rgb(237,77,31)" rx="2" ry="2" />
<text  x="34.22" y="159.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.09%)</title><rect x="41.3" y="693" width="1.0" height="15.0" fill="rgb(240,155,46)" rx="2" ry="2" />
<text  x="44.32" y="703.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (1 samples, 0.09%)</title><rect x="31.2" y="485" width="1.0" height="15.0" fill="rgb(230,124,26)" rx="2" ry="2" />
<text  x="34.22" y="495.5" ></text>
</g>
<g >
<title>arrow::internal::unpack32_avx512 (7 samples, 0.60%)</title><rect x="46.4" y="709" width="7.0" height="15.0" fill="rgb(222,113,6)" rx="2" ry="2" />
<text  x="49.37" y="719.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (6 samples, 0.51%)</title><rect x="98.9" y="741" width="6.1" height="15.0" fill="rgb(250,78,48)" rx="2" ry="2" />
<text  x="101.90" y="751.5" ></text>
</g>
<g >
<title>arrow::bit_util::BitReader::GetBatch&lt;int&gt; (4 samples, 0.34%)</title><rect x="42.3" y="725" width="4.1" height="15.0" fill="rgb(235,63,25)" rx="2" ry="2" />
<text  x="45.33" y="735.5" ></text>
</g>
<g >
<title>read_pages (5 samples, 0.43%)</title><rect x="91.8" y="501" width="5.1" height="15.0" fill="rgb(252,108,37)" rx="2" ry="2" />
<text  x="94.83" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="13.0" y="725" width="1.0" height="15.0" fill="rgb(207,52,28)" rx="2" ry="2" />
<text  x="16.03" y="735.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.09%)</title><rect x="1041.5" y="357" width="1.0" height="15.0" fill="rgb(230,135,20)" rx="2" ry="2" />
<text  x="1044.49" y="367.5" ></text>
</g>
<g >
<title>arch_cpu_idle (144 samples, 12.33%)</title><rect x="1043.5" y="597" width="145.5" height="15.0" fill="rgb(219,203,21)" rx="2" ry="2" />
<text  x="1046.51" y="607.5" >arch_cpu_idle</text>
</g>
<g >
<title>lookup_slow (4 samples, 0.34%)</title><rect x="17.1" y="565" width="4.0" height="15.0" fill="rgb(228,98,45)" rx="2" ry="2" />
<text  x="20.07" y="575.5" ></text>
</g>
<g >
<title>blk_finish_plug (1 samples, 0.09%)</title><rect x="91.8" y="485" width="1.0" height="15.0" fill="rgb(242,121,9)" rx="2" ry="2" />
<text  x="94.83" y="495.5" ></text>
</g>
<g >
<title>__blk_mq_run_hw_queue (1 samples, 0.09%)</title><rect x="91.8" y="389" width="1.0" height="15.0" fill="rgb(246,21,19)" rx="2" ry="2" />
<text  x="94.83" y="399.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::AddInputsToFrameStateDescriptor (1 samples, 0.09%)</title><rect x="35.3" y="437" width="1.0" height="15.0" fill="rgb(227,34,28)" rx="2" ry="2" />
<text  x="38.26" y="447.5" ></text>
</g>
<g >
<title>__ext4fs_dirhash (1 samples, 0.09%)</title><rect x="18.1" y="453" width="1.0" height="15.0" fill="rgb(208,228,51)" rx="2" ry="2" />
<text  x="21.08" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (1 samples, 0.09%)</title><rect x="166.6" y="709" width="1.0" height="15.0" fill="rgb(215,211,27)" rx="2" ry="2" />
<text  x="169.59" y="719.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="30.2" y="437" width="1.0" height="15.0" fill="rgb(222,207,38)" rx="2" ry="2" />
<text  x="33.21" y="447.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (1 samples, 0.09%)</title><rect x="1041.5" y="453" width="1.0" height="15.0" fill="rgb(254,85,31)" rx="2" ry="2" />
<text  x="1044.49" y="463.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (5 samples, 0.43%)</title><rect x="86.8" y="469" width="5.0" height="15.0" fill="rgb(211,163,5)" rx="2" ry="2" />
<text  x="89.78" y="479.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4 samples, 0.34%)</title><rect x="75.7" y="357" width="4.0" height="15.0" fill="rgb(235,125,33)" rx="2" ry="2" />
<text  x="78.67" y="367.5" ></text>
</g>
<g >
<title>node::InternalCallbackScope::Close (1 samples, 0.09%)</title><rect x="31.2" y="533" width="1.0" height="15.0" fill="rgb(226,215,32)" rx="2" ry="2" />
<text  x="34.22" y="543.5" ></text>
</g>
<g >
<title>node (11 samples, 0.94%)</title><rect x="25.2" y="757" width="11.1" height="15.0" fill="rgb(214,64,15)" rx="2" ry="2" />
<text  x="28.15" y="767.5" ></text>
</g>
<g >
<title>dup_mm (5 samples, 0.43%)</title><rect x="25.2" y="645" width="5.0" height="15.0" fill="rgb(225,189,8)" rx="2" ry="2" />
<text  x="28.15" y="655.5" ></text>
</g>
<g >
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="31.2" y="85" width="1.0" height="15.0" fill="rgb(244,67,45)" rx="2" ry="2" />
<text  x="34.22" y="95.5" ></text>
</g>
<g >
<title>v8::internal::compiler::(anonymous namespace)::VisitWord64EqualImpl (1 samples, 0.09%)</title><rect x="35.3" y="533" width="1.0" height="15.0" fill="rgb(205,75,12)" rx="2" ry="2" />
<text  x="38.26" y="543.5" ></text>
</g>
<g >
<title>__do_sys_newlstat (5 samples, 0.43%)</title><rect x="16.1" y="661" width="5.0" height="15.0" fill="rgb(238,5,44)" rx="2" ry="2" />
<text  x="19.06" y="671.5" ></text>
</g>
<g >
<title>__lru_cache_add (1 samples, 0.09%)</title><rect x="94.9" y="421" width="1.0" height="15.0" fill="rgb(217,118,7)" rx="2" ry="2" />
<text  x="97.86" y="431.5" ></text>
</g>
<g >
<title>link_path_walk.part.0 (1 samples, 0.09%)</title><rect x="11.0" y="533" width="1.0" height="15.0" fill="rgb(245,2,35)" rx="2" ry="2" />
<text  x="14.01" y="543.5" ></text>
</g>
<g >
<title>Builtins_BaselineLeaveFrame (1 samples, 0.09%)</title><rect x="31.2" y="117" width="1.0" height="15.0" fill="rgb(243,136,8)" rx="2" ry="2" />
<text  x="34.22" y="127.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (145 samples, 12.41%)</title><rect x="1043.5" y="725" width="146.5" height="15.0" fill="rgb(250,38,34)" rx="2" ry="2" />
<text  x="1046.51" y="735.5" >x86_64_start_kernel</text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.34%)</title><rect x="86.8" y="437" width="4.0" height="15.0" fill="rgb(233,24,50)" rx="2" ry="2" />
<text  x="89.78" y="447.5" ></text>
</g>
<g >
<title>submit_bio (1 samples, 0.09%)</title><rect x="17.1" y="453" width="1.0" height="15.0" fill="rgb(236,11,51)" rx="2" ry="2" />
<text  x="20.07" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="166.6" y="741" width="1.0" height="15.0" fill="rgb(227,199,39)" rx="2" ry="2" />
<text  x="169.59" y="751.5" ></text>
</g>
<g >
<title>execve (1 samples, 0.09%)</title><rect x="167.6" y="709" width="1.0" height="15.0" fill="rgb(244,147,13)" rx="2" ry="2" />
<text  x="170.60" y="719.5" ></text>
</g>
<g >
<title>pread64 (1 samples, 0.09%)</title><rect x="165.6" y="741" width="1.0" height="15.0" fill="rgb(241,171,23)" rx="2" ry="2" />
<text  x="168.58" y="751.5" ></text>
</g>
<g >
<title>__do_sys_newfstat (1 samples, 0.09%)</title><rect x="24.1" y="677" width="1.1" height="15.0" fill="rgb(212,92,41)" rx="2" ry="2" />
<text  x="27.14" y="687.5" ></text>
</g>
<g >
<title>copy_page_to_iter (32 samples, 2.74%)</title><rect x="54.5" y="549" width="32.3" height="15.0" fill="rgb(237,53,26)" rx="2" ry="2" />
<text  x="57.45" y="559.5" >co..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.09%)</title><rect x="97.9" y="709" width="1.0" height="15.0" fill="rgb(215,40,23)" rx="2" ry="2" />
<text  x="100.89" y="719.5" ></text>
</g>
<g >
<title>blk_mq_make_request (1 samples, 0.09%)</title><rect x="17.1" y="421" width="1.0" height="15.0" fill="rgb(212,29,1)" rx="2" ry="2" />
<text  x="20.07" y="431.5" ></text>
</g>
<g >
<title>ext4_dx_find_entry (1 samples, 0.09%)</title><rect x="18.1" y="501" width="1.0" height="15.0" fill="rgb(234,3,16)" rx="2" ry="2" />
<text  x="21.08" y="511.5" ></text>
</g>
<g >
<title>do_IRQ (2 samples, 0.17%)</title><rect x="1040.5" y="613" width="2.0" height="15.0" fill="rgb(229,222,31)" rx="2" ry="2" />
<text  x="1043.48" y="623.5" ></text>
</g>
<g >
<title>try_charge (6 samples, 0.51%)</title><rect x="80.7" y="357" width="6.1" height="15.0" fill="rgb(207,44,3)" rx="2" ry="2" />
<text  x="83.72" y="367.5" ></text>
</g>
<g >
<title>do_async_page_fault (21 samples, 1.80%)</title><rect x="65.6" y="501" width="21.2" height="15.0" fill="rgb(247,115,5)" rx="2" ry="2" />
<text  x="68.57" y="511.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (4 samples, 0.34%)</title><rect x="92.8" y="469" width="4.1" height="15.0" fill="rgb(243,89,51)" rx="2" ry="2" />
<text  x="95.84" y="479.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="165" width="1.0" height="15.0" fill="rgb(221,90,34)" rx="2" ry="2" />
<text  x="34.22" y="175.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="373" width="1.0" height="15.0" fill="rgb(221,213,20)" rx="2" ry="2" />
<text  x="34.22" y="383.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.09%)</title><rect x="38.3" y="613" width="1.0" height="15.0" fill="rgb(243,207,53)" rx="2" ry="2" />
<text  x="41.29" y="623.5" ></text>
</g>
<g >
<title>load_elf_binary (2 samples, 0.17%)</title><rect x="33.2" y="645" width="2.1" height="15.0" fill="rgb(228,123,49)" rx="2" ry="2" />
<text  x="36.24" y="655.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="53.4" y="645" width="1.1" height="15.0" fill="rgb(240,145,19)" rx="2" ry="2" />
<text  x="56.44" y="655.5" ></text>
</g>
<g >
<title>__close_nocancel (1 samples, 0.09%)</title><rect x="23.1" y="741" width="1.0" height="15.0" fill="rgb(234,38,37)" rx="2" ry="2" />
<text  x="26.13" y="751.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.09%)</title><rect x="21.1" y="725" width="1.0" height="15.0" fill="rgb(237,43,10)" rx="2" ry="2" />
<text  x="24.11" y="735.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (1 samples, 0.09%)</title><rect x="1041.5" y="437" width="1.0" height="15.0" fill="rgb(248,25,47)" rx="2" ry="2" />
<text  x="1044.49" y="447.5" ></text>
</g>
<g >
<title>kprobe_ftrace_handler (1 samples, 0.09%)</title><rect x="167.6" y="629" width="1.0" height="15.0" fill="rgb(247,3,10)" rx="2" ry="2" />
<text  x="170.60" y="639.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (1 samples, 0.09%)</title><rect x="31.2" y="469" width="1.0" height="15.0" fill="rgb(216,47,26)" rx="2" ry="2" />
<text  x="34.22" y="479.5" ></text>
</g>
<g >
<title>__do_sys_madvise (3 samples, 0.26%)</title><rect x="38.3" y="661" width="3.0" height="15.0" fill="rgb(213,150,15)" rx="2" ry="2" />
<text  x="41.29" y="671.5" ></text>
</g>
<g >
<title>git (11 samples, 0.94%)</title><rect x="14.0" y="757" width="11.2" height="15.0" fill="rgb(223,140,13)" rx="2" ry="2" />
<text  x="17.04" y="767.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;arrow::Buffer, std::allocator&lt;arrow::Buffer&gt;,  (1 samples, 0.09%)</title><rect x="97.9" y="725" width="1.0" height="15.0" fill="rgb(250,148,51)" rx="2" ry="2" />
<text  x="100.89" y="735.5" ></text>
</g>
<g >
<title>__lxstat64 (5 samples, 0.43%)</title><rect x="16.1" y="725" width="5.0" height="15.0" fill="rgb(245,115,37)" rx="2" ry="2" />
<text  x="19.06" y="735.5" ></text>
</g>
<g >
<title>cp_new_stat (1 samples, 0.09%)</title><rect x="16.1" y="645" width="1.0" height="15.0" fill="rgb(231,227,43)" rx="2" ry="2" />
<text  x="19.06" y="655.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (4 samples, 0.34%)</title><rect x="17.1" y="597" width="4.0" height="15.0" fill="rgb(240,144,3)" rx="2" ry="2" />
<text  x="20.07" y="607.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.09%)</title><rect x="29.2" y="501" width="1.0" height="15.0" fill="rgb(221,204,17)" rx="2" ry="2" />
<text  x="32.20" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="10.0" y="709" width="1.0" height="15.0" fill="rgb(213,219,33)" rx="2" ry="2" />
<text  x="13.00" y="719.5" ></text>
</g>
<g >
<title>__do_sys_newstat (1 samples, 0.09%)</title><rect x="11.0" y="613" width="1.0" height="15.0" fill="rgb(243,101,42)" rx="2" ry="2" />
<text  x="14.01" y="623.5" ></text>
</g>
<g >
<title>async_page_fault (1 samples, 0.09%)</title><rect x="21.1" y="677" width="1.0" height="15.0" fill="rgb(252,90,8)" rx="2" ry="2" />
<text  x="24.11" y="687.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.26%)</title><rect x="38.3" y="709" width="3.0" height="15.0" fill="rgb(235,168,31)" rx="2" ry="2" />
<text  x="41.29" y="719.5" ></text>
</g>
<g >
<title>do_exit (1 samples, 0.09%)</title><rect x="166.6" y="677" width="1.0" height="15.0" fill="rgb(218,197,18)" rx="2" ry="2" />
<text  x="169.59" y="687.5" ></text>
</g>
<g >
<title>ext4_readpages (4 samples, 0.34%)</title><rect x="92.8" y="485" width="4.1" height="15.0" fill="rgb(239,37,28)" rx="2" ry="2" />
<text  x="95.84" y="495.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.09%)</title><rect x="36.3" y="725" width="1.0" height="15.0" fill="rgb(219,223,26)" rx="2" ry="2" />
<text  x="39.27" y="735.5" ></text>
</g>
<g >
<title>ondemand_readahead (11 samples, 0.94%)</title><rect x="86.8" y="533" width="11.1" height="15.0" fill="rgb(233,192,43)" rx="2" ry="2" />
<text  x="89.78" y="543.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="357" width="1.0" height="15.0" fill="rgb(217,9,29)" rx="2" ry="2" />
<text  x="34.22" y="367.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (1 samples, 0.09%)</title><rect x="30.2" y="517" width="1.0" height="15.0" fill="rgb(231,85,23)" rx="2" ry="2" />
<text  x="33.21" y="527.5" ></text>
</g>
<g >
<title>alloc_pages_vma (4 samples, 0.34%)</title><rect x="75.7" y="389" width="4.0" height="15.0" fill="rgb(212,70,14)" rx="2" ry="2" />
<text  x="78.67" y="399.5" ></text>
</g>
<g >
<title>async_page_fault (1 samples, 0.09%)</title><rect x="30.2" y="293" width="1.0" height="15.0" fill="rgb(215,104,50)" rx="2" ry="2" />
<text  x="33.21" y="303.5" ></text>
</g>
<g >
<title>pread64 (43 samples, 3.68%)</title><rect x="54.5" y="725" width="43.4" height="15.0" fill="rgb(249,205,13)" rx="2" ry="2" />
<text  x="57.45" y="735.5" >prea..</text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="30.2" y="405" width="1.0" height="15.0" fill="rgb(212,109,8)" rx="2" ry="2" />
<text  x="33.21" y="415.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.09%)</title><rect x="1041.5" y="565" width="1.0" height="15.0" fill="rgb(243,208,38)" rx="2" ry="2" />
<text  x="1044.49" y="575.5" ></text>
</g>
<g >
<title>__fxstat (1 samples, 0.09%)</title><rect x="24.1" y="741" width="1.1" height="15.0" fill="rgb(218,212,11)" rx="2" ry="2" />
<text  x="27.14" y="751.5" ></text>
</g>
<g >
<title>clock_nanosleep@GLIBC_2.2.5 (1 samples, 0.09%)</title><rect x="13.0" y="741" width="1.0" height="15.0" fill="rgb(214,39,2)" rx="2" ry="2" />
<text  x="16.03" y="751.5" ></text>
</g>
<g >
<title>__fork (5 samples, 0.43%)</title><rect x="25.2" y="741" width="5.0" height="15.0" fill="rgb(244,103,14)" rx="2" ry="2" />
<text  x="28.15" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="165.6" y="725" width="1.0" height="15.0" fill="rgb(207,118,1)" rx="2" ry="2" />
<text  x="168.58" y="735.5" ></text>
</g>
<g >
<title>aqs::CThreadUtil::ThreadFunc (2 samples, 0.17%)</title><rect x="11.0" y="741" width="2.0" height="15.0" fill="rgb(221,9,47)" rx="2" ry="2" />
<text  x="14.01" y="751.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (1 samples, 0.09%)</title><rect x="31.2" y="453" width="1.0" height="15.0" fill="rgb(226,69,32)" rx="2" ry="2" />
<text  x="34.22" y="463.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="30.2" y="453" width="1.0" height="15.0" fill="rgb(240,110,12)" rx="2" ry="2" />
<text  x="33.21" y="463.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.09%)</title><rect x="1039.5" y="565" width="1.0" height="15.0" fill="rgb(238,133,0)" rx="2" ry="2" />
<text  x="1042.47" y="575.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (1 samples, 0.09%)</title><rect x="30.2" y="597" width="1.0" height="15.0" fill="rgb(242,67,48)" rx="2" ry="2" />
<text  x="33.21" y="607.5" ></text>
</g>
<g >
<title>rmqueue (1 samples, 0.09%)</title><rect x="90.8" y="437" width="1.0" height="15.0" fill="rgb(227,91,23)" rx="2" ry="2" />
<text  x="93.82" y="447.5" ></text>
</g>
<g >
<title>_do_fork (5 samples, 0.43%)</title><rect x="25.2" y="677" width="5.0" height="15.0" fill="rgb(248,163,47)" rx="2" ry="2" />
<text  x="28.15" y="687.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (1 samples, 0.09%)</title><rect x="1041.5" y="485" width="1.0" height="15.0" fill="rgb(226,133,16)" rx="2" ry="2" />
<text  x="1044.49" y="495.5" ></text>
</g>
<g >
<title>pte_alloc_one (1 samples, 0.09%)</title><rect x="29.2" y="565" width="1.0" height="15.0" fill="rgb(220,106,50)" rx="2" ry="2" />
<text  x="32.20" y="575.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::SelectInstructions (1 samples, 0.09%)</title><rect x="35.3" y="629" width="1.0" height="15.0" fill="rgb(222,73,26)" rx="2" ry="2" />
<text  x="38.26" y="639.5" ></text>
</g>
<g >
<title>all (1,168 samples, 100%)</title><rect x="10.0" y="773" width="1180.0" height="15.0" fill="rgb(245,192,7)" rx="2" ry="2" />
<text  x="13.00" y="783.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="133" width="1.0" height="15.0" fill="rgb(213,23,10)" rx="2" ry="2" />
<text  x="34.22" y="143.5" ></text>
</g>
<g >
<title>free_unref_page_prepare.part.0 (1 samples, 0.09%)</title><rect x="38.3" y="565" width="1.0" height="15.0" fill="rgb(232,74,43)" rx="2" ry="2" />
<text  x="41.29" y="575.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::Spawn (1 samples, 0.09%)</title><rect x="30.2" y="341" width="1.0" height="15.0" fill="rgb(246,71,19)" rx="2" ry="2" />
<text  x="33.21" y="351.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.09%)</title><rect x="166.6" y="661" width="1.0" height="15.0" fill="rgb(253,180,43)" rx="2" ry="2" />
<text  x="169.59" y="671.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineCompilationJob::ExecuteJobImpl (1 samples, 0.09%)</title><rect x="35.3" y="661" width="1.0" height="15.0" fill="rgb(245,6,54)" rx="2" ry="2" />
<text  x="38.26" y="671.5" ></text>
</g>
<g >
<title>sed (1 samples, 0.09%)</title><rect x="166.6" y="757" width="1.0" height="15.0" fill="rgb(234,194,14)" rx="2" ry="2" />
<text  x="169.59" y="767.5" ></text>
</g>
<g >
<title>uv__read (1 samples, 0.09%)</title><rect x="31.2" y="629" width="1.0" height="15.0" fill="rgb(214,87,31)" rx="2" ry="2" />
<text  x="34.22" y="639.5" ></text>
</g>
<g >
<title>v8::Function::Call (1 samples, 0.09%)</title><rect x="31.2" y="517" width="1.0" height="15.0" fill="rgb(225,8,46)" rx="2" ry="2" />
<text  x="34.22" y="527.5" ></text>
</g>
<g >
<title>__fdget_raw (1 samples, 0.09%)</title><rect x="24.1" y="645" width="1.1" height="15.0" fill="rgb(238,181,10)" rx="2" ry="2" />
<text  x="27.14" y="655.5" ></text>
</g>
<g >
<title>calloc (1 samples, 0.09%)</title><rect x="22.1" y="725" width="1.0" height="15.0" fill="rgb(238,66,0)" rx="2" ry="2" />
<text  x="25.12" y="735.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (1 samples, 0.09%)</title><rect x="1042.5" y="677" width="1.0" height="15.0" fill="rgb(236,8,13)" rx="2" ry="2" />
<text  x="1045.50" y="687.5" ></text>
</g>
<g >
<title>uv__stream_io (1 samples, 0.09%)</title><rect x="31.2" y="645" width="1.0" height="15.0" fill="rgb(232,72,26)" rx="2" ry="2" />
<text  x="34.22" y="655.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_requests (1 samples, 0.09%)</title><rect x="91.8" y="437" width="1.0" height="15.0" fill="rgb(232,25,49)" rx="2" ry="2" />
<text  x="94.83" y="447.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue (1 samples, 0.09%)</title><rect x="1041.5" y="309" width="1.0" height="15.0" fill="rgb(224,83,11)" rx="2" ry="2" />
<text  x="1044.49" y="319.5" ></text>
</g>
<g >
<title>kprobe_dispatcher (1 samples, 0.09%)</title><rect x="167.6" y="613" width="1.0" height="15.0" fill="rgb(240,99,19)" rx="2" ry="2" />
<text  x="170.60" y="623.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="30.2" y="389" width="1.0" height="15.0" fill="rgb(225,22,37)" rx="2" ry="2" />
<text  x="33.21" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.17%)</title><rect x="33.2" y="725" width="2.1" height="15.0" fill="rgb(215,220,10)" rx="2" ry="2" />
<text  x="36.24" y="735.5" ></text>
</g>
<g >
<title>submit_bh_wbc (1 samples, 0.09%)</title><rect x="17.1" y="469" width="1.0" height="15.0" fill="rgb(226,24,42)" rx="2" ry="2" />
<text  x="20.07" y="479.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.09%)</title><rect x="38.3" y="629" width="1.0" height="15.0" fill="rgb(236,155,39)" rx="2" ry="2" />
<text  x="41.29" y="639.5" ></text>
</g>
<g >
<title>virtnet_poll (1 samples, 0.09%)</title><rect x="1041.5" y="549" width="1.0" height="15.0" fill="rgb(237,151,50)" rx="2" ry="2" />
<text  x="1044.49" y="559.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="23.1" y="709" width="1.0" height="15.0" fill="rgb(229,98,5)" rx="2" ry="2" />
<text  x="26.13" y="719.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.09%)</title><rect x="12.0" y="645" width="1.0" height="15.0" fill="rgb(227,198,21)" rx="2" ry="2" />
<text  x="15.02" y="655.5" ></text>
</g>
<g >
<title>__do_fault (1 samples, 0.09%)</title><rect x="53.4" y="581" width="1.1" height="15.0" fill="rgb(230,120,52)" rx="2" ry="2" />
<text  x="56.44" y="591.5" ></text>
</g>
<g >
<title>ksys_pread64 (43 samples, 3.68%)</title><rect x="54.5" y="661" width="43.4" height="15.0" fill="rgb(235,119,46)" rx="2" ry="2" />
<text  x="57.45" y="671.5" >ksys..</text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.17%)</title><rect x="39.3" y="613" width="2.0" height="15.0" fill="rgb(206,96,21)" rx="2" ry="2" />
<text  x="42.30" y="623.5" ></text>
</g>
<g >
<title>new_sync_read (43 samples, 3.68%)</title><rect x="54.5" y="613" width="43.4" height="15.0" fill="rgb(243,55,3)" rx="2" ry="2" />
<text  x="57.45" y="623.5" >new_..</text>
</g>
<g >
<title>_dl_relocate_object (1 samples, 0.09%)</title><rect x="21.1" y="693" width="1.0" height="15.0" fill="rgb(254,200,45)" rx="2" ry="2" />
<text  x="24.11" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="23.1" y="725" width="1.0" height="15.0" fill="rgb(234,115,50)" rx="2" ry="2" />
<text  x="26.13" y="735.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="293" width="1.0" height="15.0" fill="rgb(242,209,53)" rx="2" ry="2" />
<text  x="34.22" y="303.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="21.1" y="597" width="1.0" height="15.0" fill="rgb(241,193,34)" rx="2" ry="2" />
<text  x="24.11" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.09%)</title><rect x="30.2" y="213" width="1.0" height="15.0" fill="rgb(243,186,2)" rx="2" ry="2" />
<text  x="33.21" y="223.5" ></text>
</g>
<g >
<title>do_anonymous_page (11 samples, 0.94%)</title><rect x="75.7" y="405" width="11.1" height="15.0" fill="rgb(235,173,18)" rx="2" ry="2" />
<text  x="78.67" y="415.5" ></text>
</g>
<g >
<title>cpu_startup_entry (145 samples, 12.41%)</title><rect x="1043.5" y="645" width="146.5" height="15.0" fill="rgb(205,72,40)" rx="2" ry="2" />
<text  x="1046.51" y="655.5" >cpu_startup_entry</text>
</g>
<g >
<title>mem_cgroup_try_charge (1 samples, 0.09%)</title><rect x="93.9" y="421" width="1.0" height="15.0" fill="rgb(213,128,11)" rx="2" ry="2" />
<text  x="96.85" y="431.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="30.2" y="469" width="1.0" height="15.0" fill="rgb(241,139,36)" rx="2" ry="2" />
<text  x="33.21" y="479.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (2 samples, 0.17%)</title><rect x="33.2" y="533" width="2.1" height="15.0" fill="rgb(225,126,30)" rx="2" ry="2" />
<text  x="36.24" y="543.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="11.0" y="661" width="1.0" height="15.0" fill="rgb(251,159,4)" rx="2" ry="2" />
<text  x="14.01" y="671.5" ></text>
</g>
<g >
<title>parquet::internal::FindMinMaxAvx2 (21 samples, 1.80%)</title><rect x="144.4" y="741" width="21.2" height="15.0" fill="rgb(218,74,31)" rx="2" ry="2" />
<text  x="147.37" y="751.5" ></text>
</g>
<g >
<title>xa_get_order (1 samples, 0.09%)</title><rect x="95.9" y="437" width="1.0" height="15.0" fill="rgb(208,69,4)" rx="2" ry="2" />
<text  x="98.87" y="447.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (1 samples, 0.09%)</title><rect x="31.2" y="565" width="1.0" height="15.0" fill="rgb(225,215,35)" rx="2" ry="2" />
<text  x="34.22" y="575.5" ></text>
</g>
<g >
<title>user_path_at_empty (1 samples, 0.09%)</title><rect x="11.0" y="581" width="1.0" height="15.0" fill="rgb(250,153,44)" rx="2" ry="2" />
<text  x="14.01" y="591.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (1 samples, 0.09%)</title><rect x="1041.5" y="501" width="1.0" height="15.0" fill="rgb(227,138,20)" rx="2" ry="2" />
<text  x="1044.49" y="511.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::AddInputsToFrameStateDescriptor (1 samples, 0.09%)</title><rect x="35.3" y="405" width="1.0" height="15.0" fill="rgb(216,57,23)" rx="2" ry="2" />
<text  x="38.26" y="415.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (1 samples, 0.09%)</title><rect x="30.2" y="533" width="1.0" height="15.0" fill="rgb(213,87,2)" rx="2" ry="2" />
<text  x="33.21" y="543.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.09%)</title><rect x="38.3" y="597" width="1.0" height="15.0" fill="rgb(245,116,35)" rx="2" ry="2" />
<text  x="41.29" y="607.5" ></text>
</g>
<g >
<title>__rb_insert_augmented (1 samples, 0.09%)</title><rect x="25.2" y="613" width="1.0" height="15.0" fill="rgb(216,18,4)" rx="2" ry="2" />
<text  x="28.15" y="623.5" ></text>
</g>
<g >
<title>start_thread (1 samples, 0.09%)</title><rect x="35.3" y="741" width="1.0" height="15.0" fill="rgb(220,33,44)" rx="2" ry="2" />
<text  x="38.26" y="751.5" ></text>
</g>
<g >
<title>flush_old_exec (2 samples, 0.17%)</title><rect x="33.2" y="629" width="2.1" height="15.0" fill="rgb(206,26,13)" rx="2" ry="2" />
<text  x="36.24" y="639.5" ></text>
</g>
<g >
<title>je_arrow_private_je_ehooks_init (1 samples, 0.09%)</title><rect x="53.4" y="725" width="1.1" height="15.0" fill="rgb(231,1,2)" rx="2" ry="2" />
<text  x="56.44" y="735.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (1 samples, 0.09%)</title><rect x="31.2" y="613" width="1.0" height="15.0" fill="rgb(243,128,18)" rx="2" ry="2" />
<text  x="34.22" y="623.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.09%)</title><rect x="1041.5" y="261" width="1.0" height="15.0" fill="rgb(248,88,16)" rx="2" ry="2" />
<text  x="1044.49" y="271.5" ></text>
</g>
<g >
<title>pagevec_lru_move_fn (1 samples, 0.09%)</title><rect x="94.9" y="405" width="1.0" height="15.0" fill="rgb(253,188,40)" rx="2" ry="2" />
<text  x="97.86" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_clone (5 samples, 0.43%)</title><rect x="25.2" y="693" width="5.0" height="15.0" fill="rgb(244,182,32)" rx="2" ry="2" />
<text  x="28.15" y="703.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="245" width="1.0" height="15.0" fill="rgb(252,159,14)" rx="2" ry="2" />
<text  x="34.22" y="255.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::VisitDeoptimizeUnless (1 samples, 0.09%)</title><rect x="35.3" y="565" width="1.0" height="15.0" fill="rgb(246,70,6)" rx="2" ry="2" />
<text  x="38.26" y="575.5" ></text>
</g>
<g >
<title>v8::internal::compiler::PipelineImpl::OptimizeGraph (1 samples, 0.09%)</title><rect x="35.3" y="645" width="1.0" height="15.0" fill="rgb(227,117,7)" rx="2" ry="2" />
<text  x="38.26" y="655.5" ></text>
</g>
<g >
<title>swapper (1,011 samples, 86.56%)</title><rect x="168.6" y="757" width="1021.4" height="15.0" fill="rgb(226,106,29)" rx="2" ry="2" />
<text  x="171.61" y="767.5" >swapper</text>
</g>
<g >
<title>vfs_statx (4 samples, 0.34%)</title><rect x="17.1" y="645" width="4.0" height="15.0" fill="rgb(221,44,53)" rx="2" ry="2" />
<text  x="20.07" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (5 samples, 0.43%)</title><rect x="16.1" y="693" width="5.0" height="15.0" fill="rgb(247,149,29)" rx="2" ry="2" />
<text  x="19.06" y="703.5" ></text>
</g>
<g >
<title>ksys_pread64 (1 samples, 0.09%)</title><rect x="165.6" y="677" width="1.0" height="15.0" fill="rgb(235,177,53)" rx="2" ry="2" />
<text  x="168.58" y="687.5" ></text>
</g>
<g >
<title>__ext4_find_entry (2 samples, 0.17%)</title><rect x="17.1" y="517" width="2.0" height="15.0" fill="rgb(227,49,12)" rx="2" ry="2" />
<text  x="20.07" y="527.5" ></text>
</g>
<g >
<title>lru_cache_add (1 samples, 0.09%)</title><rect x="94.9" y="437" width="1.0" height="15.0" fill="rgb(221,195,21)" rx="2" ry="2" />
<text  x="97.86" y="447.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="53.4" y="597" width="1.1" height="15.0" fill="rgb(244,212,50)" rx="2" ry="2" />
<text  x="56.44" y="607.5" ></text>
</g>
<g >
<title>xa_load (1 samples, 0.09%)</title><rect x="96.9" y="501" width="1.0" height="15.0" fill="rgb(242,111,19)" rx="2" ry="2" />
<text  x="99.88" y="511.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.09%)</title><rect x="1038.5" y="565" width="1.0" height="15.0" fill="rgb(249,72,31)" rx="2" ry="2" />
<text  x="1041.46" y="575.5" ></text>
</g>
<g >
<title>uhci_hub_status_data (1 samples, 0.09%)</title><rect x="1039.5" y="485" width="1.0" height="15.0" fill="rgb(244,202,3)" rx="2" ry="2" />
<text  x="1042.47" y="495.5" ></text>
</g>
<g >
<title>probe_kernel_read (1 samples, 0.09%)</title><rect x="167.6" y="565" width="1.0" height="15.0" fill="rgb(252,85,3)" rx="2" ry="2" />
<text  x="170.60" y="575.5" ></text>
</g>
<g >
<title>zap_page_range (3 samples, 0.26%)</title><rect x="38.3" y="645" width="3.0" height="15.0" fill="rgb(245,80,8)" rx="2" ry="2" />
<text  x="41.29" y="655.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.17%)</title><rect x="39.3" y="629" width="2.0" height="15.0" fill="rgb(215,65,52)" rx="2" ry="2" />
<text  x="42.30" y="639.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.09%)</title><rect x="21.1" y="645" width="1.0" height="15.0" fill="rgb(239,167,22)" rx="2" ry="2" />
<text  x="24.11" y="655.5" ></text>
</g>
<g >
<title>____fput (1 samples, 0.09%)</title><rect x="23.1" y="661" width="1.0" height="15.0" fill="rgb(211,141,2)" rx="2" ry="2" />
<text  x="26.13" y="671.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="277" width="1.0" height="15.0" fill="rgb(253,200,22)" rx="2" ry="2" />
<text  x="34.22" y="287.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="341" width="1.0" height="15.0" fill="rgb(246,67,44)" rx="2" ry="2" />
<text  x="34.22" y="351.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::EmitWithContinuation (1 samples, 0.09%)</title><rect x="35.3" y="501" width="1.0" height="15.0" fill="rgb(206,39,21)" rx="2" ry="2" />
<text  x="38.26" y="511.5" ></text>
</g>
<g >
<title>alloc_inode (1 samples, 0.09%)</title><rect x="20.1" y="485" width="1.0" height="15.0" fill="rgb(214,80,24)" rx="2" ry="2" />
<text  x="23.10" y="495.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (1 samples, 0.09%)</title><rect x="30.2" y="501" width="1.0" height="15.0" fill="rgb(254,114,6)" rx="2" ry="2" />
<text  x="33.21" y="511.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.09%)</title><rect x="53.4" y="469" width="1.1" height="15.0" fill="rgb(247,178,13)" rx="2" ry="2" />
<text  x="56.44" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="10.0" y="725" width="1.0" height="15.0" fill="rgb(209,59,53)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.09%)</title><rect x="166.6" y="645" width="1.0" height="15.0" fill="rgb(211,106,25)" rx="2" ry="2" />
<text  x="169.59" y="655.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (32 samples, 2.74%)</title><rect x="54.5" y="533" width="32.3" height="15.0" fill="rgb(251,36,27)" rx="2" ry="2" />
<text  x="57.45" y="543.5" >co..</text>
</g>
<g >
<title>[unknown] (8 samples, 0.68%)</title><rect x="15.1" y="741" width="8.0" height="15.0" fill="rgb(205,20,43)" rx="2" ry="2" />
<text  x="18.05" y="751.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.17%)</title><rect x="1038.5" y="629" width="2.0" height="15.0" fill="rgb(214,71,6)" rx="2" ry="2" />
<text  x="1041.46" y="639.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (1 samples, 0.09%)</title><rect x="31.2" y="549" width="1.0" height="15.0" fill="rgb(248,148,5)" rx="2" ry="2" />
<text  x="34.22" y="559.5" ></text>
</g>
<g >
<title>release_pages (1 samples, 0.09%)</title><rect x="38.3" y="581" width="1.0" height="15.0" fill="rgb(250,194,13)" rx="2" ry="2" />
<text  x="41.29" y="591.5" ></text>
</g>
<g >
<title>start_secondary (866 samples, 74.14%)</title><rect x="168.6" y="725" width="874.9" height="15.0" fill="rgb(211,213,16)" rx="2" ry="2" />
<text  x="171.61" y="735.5" >start_secondary</text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="261" width="1.0" height="15.0" fill="rgb(241,191,45)" rx="2" ry="2" />
<text  x="34.22" y="271.5" ></text>
</g>
<g >
<title>native_safe_halt (865 samples, 74.06%)</title><rect x="168.6" y="645" width="873.9" height="15.0" fill="rgb(248,39,45)" rx="2" ry="2" />
<text  x="171.61" y="655.5" >native_safe_halt</text>
</g>
<g >
<title>CKprobeExecEvent::OnEvent (1 samples, 0.09%)</title><rect x="11.0" y="693" width="1.0" height="15.0" fill="rgb(225,156,14)" rx="2" ry="2" />
<text  x="14.01" y="703.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="12.0" y="709" width="1.0" height="15.0" fill="rgb(228,48,22)" rx="2" ry="2" />
<text  x="15.02" y="719.5" ></text>
</g>
<g >
<title>arrow::util::RleDecoder::GetBatchWithDict&lt;parquet::ByteArray&gt; (10 samples, 0.86%)</title><rect x="123.2" y="741" width="10.1" height="15.0" fill="rgb(211,143,24)" rx="2" ry="2" />
<text  x="126.15" y="751.5" ></text>
</g>
<g >
<title>file_free_rcu (1 samples, 0.09%)</title><rect x="1038.5" y="517" width="1.0" height="15.0" fill="rgb(205,192,23)" rx="2" ry="2" />
<text  x="1041.46" y="527.5" ></text>
</g>
<g >
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="21.1" y="661" width="1.0" height="15.0" fill="rgb(245,139,0)" rx="2" ry="2" />
<text  x="24.11" y="671.5" ></text>
</g>
<g >
<title>clear_page_erms (4 samples, 0.34%)</title><rect x="75.7" y="341" width="4.0" height="15.0" fill="rgb(252,1,5)" rx="2" ry="2" />
<text  x="78.67" y="351.5" ></text>
</g>
<g >
<title>walk_component (1 samples, 0.09%)</title><rect x="11.0" y="517" width="1.0" height="15.0" fill="rgb(232,9,44)" rx="2" ry="2" />
<text  x="14.01" y="527.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::AddInputsToFrameStateDescriptor (1 samples, 0.09%)</title><rect x="35.3" y="421" width="1.0" height="15.0" fill="rgb(213,89,29)" rx="2" ry="2" />
<text  x="38.26" y="431.5" ></text>
</g>
<g >
<title>[libc-2.31.so] (1 samples, 0.09%)</title><rect x="30.2" y="309" width="1.0" height="15.0" fill="rgb(237,115,18)" rx="2" ry="2" />
<text  x="33.21" y="319.5" ></text>
</g>
<g >
<title>node::StreamBase::CallJSOnreadMethod (1 samples, 0.09%)</title><rect x="31.2" y="581" width="1.0" height="15.0" fill="rgb(235,208,52)" rx="2" ry="2" />
<text  x="34.22" y="591.5" ></text>
</g>
<g >
<title>kfree_skbmem (1 samples, 0.09%)</title><rect x="1041.5" y="277" width="1.0" height="15.0" fill="rgb(232,192,6)" rx="2" ry="2" />
<text  x="1044.49" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_execve (2 samples, 0.17%)</title><rect x="33.2" y="693" width="2.1" height="15.0" fill="rgb(249,102,33)" rx="2" ry="2" />
<text  x="36.24" y="703.5" ></text>
</g>
<g >
<title>v8::internal::OptimizingCompileDispatcher::CompileNext (1 samples, 0.09%)</title><rect x="35.3" y="693" width="1.0" height="15.0" fill="rgb(205,118,30)" rx="2" ry="2" />
<text  x="38.26" y="703.5" ></text>
</g>
<g >
<title>page_cache_async_readahead (11 samples, 0.94%)</title><rect x="86.8" y="549" width="11.1" height="15.0" fill="rgb(219,114,52)" rx="2" ry="2" />
<text  x="89.78" y="559.5" ></text>
</g>
<g >
<title>tcp_ack (1 samples, 0.09%)</title><rect x="1041.5" y="325" width="1.0" height="15.0" fill="rgb(233,223,26)" rx="2" ry="2" />
<text  x="1044.49" y="335.5" ></text>
</g>
<g >
<title>parquet::(anonymous namespace)::TypedColumnReaderImpl&lt;parquet::PhysicalType&lt; (8 samples, 0.68%)</title><rect x="135.3" y="741" width="8.1" height="15.0" fill="rgb(250,211,52)" rx="2" ry="2" />
<text  x="138.27" y="751.5" ></text>
</g>
<g >
<title>uv__run_check (1 samples, 0.09%)</title><rect x="32.2" y="661" width="1.0" height="15.0" fill="rgb(249,7,3)" rx="2" ry="2" />
<text  x="35.23" y="671.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (43 samples, 3.68%)</title><rect x="54.5" y="709" width="43.4" height="15.0" fill="rgb(211,11,49)" rx="2" ry="2" />
<text  x="57.45" y="719.5" >entr..</text>
</g>
<g >
<title>do_page_fault (1 samples, 0.09%)</title><rect x="53.4" y="677" width="1.1" height="15.0" fill="rgb(245,36,16)" rx="2" ry="2" />
<text  x="56.44" y="687.5" ></text>
</g>
<g >
<title>CKprobeEventMgr::run (1 samples, 0.09%)</title><rect x="11.0" y="725" width="1.0" height="15.0" fill="rgb(248,225,6)" rx="2" ry="2" />
<text  x="14.01" y="735.5" ></text>
</g>
<g >
<title>async_page_fault (21 samples, 1.80%)</title><rect x="65.6" y="517" width="21.2" height="15.0" fill="rgb(225,132,36)" rx="2" ry="2" />
<text  x="68.57" y="527.5" ></text>
</g>
<g >
<title>epoll_wait (1 samples, 0.09%)</title><rect x="12.0" y="725" width="1.0" height="15.0" fill="rgb(231,32,47)" rx="2" ry="2" />
<text  x="15.02" y="735.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.09%)</title><rect x="36.3" y="741" width="1.0" height="15.0" fill="rgb(235,218,28)" rx="2" ry="2" />
<text  x="39.27" y="751.5" ></text>
</g>
<g >
<title>arrow::bit_util::BitReader::GetBatch&lt;int&gt; (2 samples, 0.17%)</title><rect x="105.0" y="741" width="2.0" height="15.0" fill="rgb(211,203,2)" rx="2" ry="2" />
<text  x="107.97" y="751.5" ></text>
</g>
<g >
<title>mem_cgroup_throttle_swaprate (1 samples, 0.09%)</title><rect x="79.7" y="373" width="1.0" height="15.0" fill="rgb(207,141,27)" rx="2" ry="2" />
<text  x="82.71" y="383.5" ></text>
</g>
<g >
<title>unmap_page_range (2 samples, 0.17%)</title><rect x="33.2" y="549" width="2.1" height="15.0" fill="rgb(228,202,36)" rx="2" ry="2" />
<text  x="36.24" y="559.5" ></text>
</g>
<g >
<title>[libparquet.so.900.0.0] (1 samples, 0.09%)</title><rect x="37.3" y="741" width="1.0" height="15.0" fill="rgb(230,53,14)" rx="2" ry="2" />
<text  x="40.28" y="751.5" ></text>
</g>
<g >
<title>non-virtual thunk to v8::internal::CancelableTask::Run (1 samples, 0.09%)</title><rect x="35.3" y="709" width="1.0" height="15.0" fill="rgb(219,29,31)" rx="2" ry="2" />
<text  x="38.26" y="719.5" ></text>
</g>
<g >
<title>__x64_sys_clock_nanosleep (1 samples, 0.09%)</title><rect x="13.0" y="693" width="1.0" height="15.0" fill="rgb(220,72,28)" rx="2" ry="2" />
<text  x="16.03" y="703.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_rq_list (1 samples, 0.09%)</title><rect x="91.8" y="341" width="1.0" height="15.0" fill="rgb(247,57,32)" rx="2" ry="2" />
<text  x="94.83" y="351.5" ></text>
</g>
<g >
<title>__fdget (1 samples, 0.09%)</title><rect x="165.6" y="661" width="1.0" height="15.0" fill="rgb(205,136,11)" rx="2" ry="2" />
<text  x="168.58" y="671.5" ></text>
</g>
<g >
<title>__page_cache_alloc (1 samples, 0.09%)</title><rect x="53.4" y="517" width="1.1" height="15.0" fill="rgb(213,139,17)" rx="2" ry="2" />
<text  x="56.44" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (43 samples, 3.68%)</title><rect x="54.5" y="677" width="43.4" height="15.0" fill="rgb(231,82,3)" rx="2" ry="2" />
<text  x="57.45" y="687.5" >__x6..</text>
</g>
<g >
<title>search_binary_handler (2 samples, 0.17%)</title><rect x="33.2" y="661" width="2.1" height="15.0" fill="rgb(241,14,42)" rx="2" ry="2" />
<text  x="36.24" y="671.5" ></text>
</g>
<g >
<title>__vfs_read (43 samples, 3.68%)</title><rect x="54.5" y="629" width="43.4" height="15.0" fill="rgb(231,220,37)" rx="2" ry="2" />
<text  x="57.45" y="639.5" >__vf..</text>
</g>
<g >
<title>kprobe_trace_func (1 samples, 0.09%)</title><rect x="167.6" y="597" width="1.0" height="15.0" fill="rgb(217,57,49)" rx="2" ry="2" />
<text  x="170.60" y="607.5" ></text>
</g>
<g >
<title>uv__signal_event (1 samples, 0.09%)</title><rect x="30.2" y="645" width="1.0" height="15.0" fill="rgb(251,147,8)" rx="2" ry="2" />
<text  x="33.21" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="165.6" y="709" width="1.0" height="15.0" fill="rgb(208,16,12)" rx="2" ry="2" />
<text  x="168.58" y="719.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.09%)</title><rect x="53.4" y="501" width="1.1" height="15.0" fill="rgb(210,153,11)" rx="2" ry="2" />
<text  x="56.44" y="511.5" ></text>
</g>
<g >
<title>gro_normal_list.part.0 (1 samples, 0.09%)</title><rect x="1041.5" y="517" width="1.0" height="15.0" fill="rgb(233,75,19)" rx="2" ry="2" />
<text  x="1044.49" y="527.5" ></text>
</g>
<g >
<title>__fput (1 samples, 0.09%)</title><rect x="23.1" y="645" width="1.0" height="15.0" fill="rgb(220,93,34)" rx="2" ry="2" />
<text  x="26.13" y="655.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::AppendDeoptimizeArguments (1 samples, 0.09%)</title><rect x="35.3" y="469" width="1.0" height="15.0" fill="rgb(238,6,4)" rx="2" ry="2" />
<text  x="38.26" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="167.6" y="693" width="1.0" height="15.0" fill="rgb(242,184,17)" rx="2" ry="2" />
<text  x="170.60" y="703.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.09%)</title><rect x="21.1" y="709" width="1.0" height="15.0" fill="rgb(241,121,3)" rx="2" ry="2" />
<text  x="24.11" y="719.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="30.2" y="485" width="1.0" height="15.0" fill="rgb(238,1,50)" rx="2" ry="2" />
<text  x="33.21" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (1 samples, 0.09%)</title><rect x="97.9" y="693" width="1.0" height="15.0" fill="rgb(249,159,15)" rx="2" ry="2" />
<text  x="100.89" y="703.5" ></text>
</g>
<g >
<title>arrow::internal::unpack32 (7 samples, 0.60%)</title><rect x="46.4" y="725" width="7.0" height="15.0" fill="rgb(236,75,17)" rx="2" ry="2" />
<text  x="49.37" y="735.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::VisitBlock (1 samples, 0.09%)</title><rect x="35.3" y="597" width="1.0" height="15.0" fill="rgb(240,99,52)" rx="2" ry="2" />
<text  x="38.26" y="607.5" ></text>
</g>
<g >
<title>AliYunDun (4 samples, 0.34%)</title><rect x="10.0" y="757" width="4.0" height="15.0" fill="rgb(241,137,47)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>mmput (2 samples, 0.17%)</title><rect x="33.2" y="613" width="2.1" height="15.0" fill="rgb(216,119,10)" rx="2" ry="2" />
<text  x="36.24" y="623.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="31.2" y="37" width="1.0" height="15.0" fill="rgb(235,33,45)" rx="2" ry="2" />
<text  x="34.22" y="47.5" ></text>
</g>
<g >
<title>ftrace_ops_assist_func (1 samples, 0.09%)</title><rect x="167.6" y="645" width="1.0" height="15.0" fill="rgb(211,111,6)" rx="2" ry="2" />
<text  x="170.60" y="655.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="181" width="1.0" height="15.0" fill="rgb(215,170,7)" rx="2" ry="2" />
<text  x="34.22" y="191.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="437" width="1.0" height="15.0" fill="rgb(245,149,31)" rx="2" ry="2" />
<text  x="34.22" y="447.5" ></text>
</g>
<g >
<title>seq_read (1 samples, 0.09%)</title><rect x="10.0" y="629" width="1.0" height="15.0" fill="rgb(246,59,50)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>node::Environment::RunAndClearNativeImmediates (1 samples, 0.09%)</title><rect x="32.2" y="629" width="1.0" height="15.0" fill="rgb(224,28,14)" rx="2" ry="2" />
<text  x="35.23" y="639.5" ></text>
</g>
<g >
<title>Builtins_PromiseConstructor (1 samples, 0.09%)</title><rect x="31.2" y="213" width="1.0" height="15.0" fill="rgb(222,218,28)" rx="2" ry="2" />
<text  x="34.22" y="223.5" ></text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.09%)</title><rect x="1038.5" y="533" width="1.0" height="15.0" fill="rgb(221,59,9)" rx="2" ry="2" />
<text  x="1041.46" y="543.5" ></text>
</g>
<g >
<title>mod_delayed_work_on (1 samples, 0.09%)</title><rect x="17.1" y="341" width="1.0" height="15.0" fill="rgb(248,29,54)" rx="2" ry="2" />
<text  x="20.07" y="351.5" ></text>
</g>
<g >
<title>uv_spawn (1 samples, 0.09%)</title><rect x="30.2" y="325" width="1.0" height="15.0" fill="rgb(231,198,49)" rx="2" ry="2" />
<text  x="33.21" y="335.5" ></text>
</g>
<g >
<title>__read (1 samples, 0.09%)</title><rect x="10.0" y="741" width="1.0" height="15.0" fill="rgb(224,146,40)" rx="2" ry="2" />
<text  x="13.00" y="751.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (1 samples, 0.09%)</title><rect x="1039.5" y="549" width="1.0" height="15.0" fill="rgb(219,140,32)" rx="2" ry="2" />
<text  x="1042.47" y="559.5" ></text>
</g>
<g >
<title>__madvise (3 samples, 0.26%)</title><rect x="38.3" y="725" width="3.0" height="15.0" fill="rgb(247,94,9)" rx="2" ry="2" />
<text  x="41.29" y="735.5" ></text>
</g>
<g >
<title>rest_init (145 samples, 12.41%)</title><rect x="1043.5" y="661" width="146.5" height="15.0" fill="rgb(241,21,16)" rx="2" ry="2" />
<text  x="1046.51" y="671.5" >rest_init</text>
</g>
<g >
<title>sh (1 samples, 0.09%)</title><rect x="167.6" y="757" width="1.0" height="15.0" fill="rgb(236,208,4)" rx="2" ry="2" />
<text  x="170.60" y="767.5" ></text>
</g>
<g >
<title>v8::internal::compiler::(anonymous namespace)::VisitCompare (1 samples, 0.09%)</title><rect x="35.3" y="517" width="1.0" height="15.0" fill="rgb(221,221,49)" rx="2" ry="2" />
<text  x="38.26" y="527.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (1 samples, 0.09%)</title><rect x="30.2" y="357" width="1.0" height="15.0" fill="rgb(236,108,53)" rx="2" ry="2" />
<text  x="33.21" y="367.5" ></text>
</g>
<g >
<title>add_to_page_cache_lru (3 samples, 0.26%)</title><rect x="93.9" y="453" width="3.0" height="15.0" fill="rgb(250,12,26)" rx="2" ry="2" />
<text  x="96.85" y="463.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="421" width="1.0" height="15.0" fill="rgb(245,169,47)" rx="2" ry="2" />
<text  x="34.22" y="431.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::VisitWordCompareZero (1 samples, 0.09%)</title><rect x="35.3" y="549" width="1.0" height="15.0" fill="rgb(247,163,37)" rx="2" ry="2" />
<text  x="38.26" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.09%)</title><rect x="31.2" y="69" width="1.0" height="15.0" fill="rgb(232,33,33)" rx="2" ry="2" />
<text  x="34.22" y="79.5" ></text>
</g>
<g >
<title>CKprobeEventMgr::ParseEvent (1 samples, 0.09%)</title><rect x="11.0" y="709" width="1.0" height="15.0" fill="rgb(247,192,13)" rx="2" ry="2" />
<text  x="14.01" y="719.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge (1 samples, 0.09%)</title><rect x="29.2" y="517" width="1.0" height="15.0" fill="rgb(244,131,15)" rx="2" ry="2" />
<text  x="32.20" y="527.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.17%)</title><rect x="1040.5" y="581" width="2.0" height="15.0" fill="rgb(213,96,13)" rx="2" ry="2" />
<text  x="1043.48" y="591.5" ></text>
</g>
<g >
<title>do_idle (866 samples, 74.14%)</title><rect x="168.6" y="693" width="874.9" height="15.0" fill="rgb(235,1,54)" rx="2" ry="2" />
<text  x="171.61" y="703.5" >do_idle</text>
</g>
<g >
<title>ps (1 samples, 0.09%)</title><rect x="36.3" y="757" width="1.0" height="15.0" fill="rgb(206,139,14)" rx="2" ry="2" />
<text  x="39.27" y="767.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="166.6" y="725" width="1.0" height="15.0" fill="rgb(228,56,5)" rx="2" ry="2" />
<text  x="169.59" y="735.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="11.0" y="645" width="1.0" height="15.0" fill="rgb(250,123,26)" rx="2" ry="2" />
<text  x="14.01" y="655.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1 samples, 0.09%)</title><rect x="1041.5" y="389" width="1.0" height="15.0" fill="rgb(237,15,37)" rx="2" ry="2" />
<text  x="1044.49" y="399.5" ></text>
</g>
<g >
<title>ext4_lookup (4 samples, 0.34%)</title><rect x="17.1" y="533" width="4.0" height="15.0" fill="rgb(233,196,49)" rx="2" ry="2" />
<text  x="20.07" y="543.5" ></text>
</g>
<g >
<title>[git] (1 samples, 0.09%)</title><rect x="15.1" y="725" width="1.0" height="15.0" fill="rgb(236,38,13)" rx="2" ry="2" />
<text  x="18.05" y="735.5" ></text>
</g>
<g >
<title>dl_main (1 samples, 0.09%)</title><rect x="41.3" y="709" width="1.0" height="15.0" fill="rgb(228,35,43)" rx="2" ry="2" />
<text  x="44.32" y="719.5" ></text>
</g>
<g >
<title>__do_page_cache_readahead (11 samples, 0.94%)</title><rect x="86.8" y="517" width="11.1" height="15.0" fill="rgb(213,145,52)" rx="2" ry="2" />
<text  x="89.78" y="527.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::PlatformWorkerThread (1 samples, 0.09%)</title><rect x="35.3" y="725" width="1.0" height="15.0" fill="rgb(233,78,7)" rx="2" ry="2" />
<text  x="38.26" y="735.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (43 samples, 3.68%)</title><rect x="54.5" y="565" width="43.4" height="15.0" fill="rgb(253,204,53)" rx="2" ry="2" />
<text  x="57.45" y="575.5" >gene..</text>
</g>
<g >
<title>__do_page_fault (21 samples, 1.80%)</title><rect x="65.6" y="469" width="21.2" height="15.0" fill="rgb(254,141,38)" rx="2" ry="2" />
<text  x="68.57" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.17%)</title><rect x="33.2" y="709" width="2.1" height="15.0" fill="rgb(233,4,39)" rx="2" ry="2" />
<text  x="36.24" y="719.5" ></text>
</g>
<g >
<title>arrow::bit_util::BitReader::GetVlqInt (2 samples, 0.17%)</title><rect x="107.0" y="741" width="2.0" height="15.0" fill="rgb(254,224,45)" rx="2" ry="2" />
<text  x="109.99" y="751.5" ></text>
</g>
<g >
<title>get_page_from_freelist (5 samples, 0.43%)</title><rect x="86.8" y="453" width="5.0" height="15.0" fill="rgb(209,2,44)" rx="2" ry="2" />
<text  x="89.78" y="463.5" ></text>
</g>
<g >
<title>unmap_single_vma (2 samples, 0.17%)</title><rect x="33.2" y="565" width="2.1" height="15.0" fill="rgb(233,220,25)" rx="2" ry="2" />
<text  x="36.24" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="21.1" y="581" width="1.0" height="15.0" fill="rgb(231,10,27)" rx="2" ry="2" />
<text  x="24.11" y="591.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (1 samples, 0.09%)</title><rect x="91.8" y="421" width="1.0" height="15.0" fill="rgb(229,218,39)" rx="2" ry="2" />
<text  x="94.83" y="431.5" ></text>
</g>
<g >
<title>secondary_startup_64 (1,011 samples, 86.56%)</title><rect x="168.6" y="741" width="1021.4" height="15.0" fill="rgb(245,207,29)" rx="2" ry="2" />
<text  x="171.61" y="751.5" >secondary_startup_64</text>
</g>
<g >
<title>__x64_sys_newlstat (5 samples, 0.43%)</title><rect x="16.1" y="677" width="5.0" height="15.0" fill="rgb(247,18,21)" rx="2" ry="2" />
<text  x="19.06" y="687.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.09%)</title><rect x="23.1" y="597" width="1.0" height="15.0" fill="rgb(225,86,8)" rx="2" ry="2" />
<text  x="26.13" y="607.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="12.0" y="693" width="1.0" height="15.0" fill="rgb(210,154,30)" rx="2" ry="2" />
<text  x="15.02" y="703.5" ></text>
</g>
<g >
<title>default_idle_call (865 samples, 74.06%)</title><rect x="168.6" y="677" width="873.9" height="15.0" fill="rgb(230,5,18)" rx="2" ry="2" />
<text  x="171.61" y="687.5" >default_idle_call</text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.09%)</title><rect x="53.4" y="485" width="1.1" height="15.0" fill="rgb(241,221,4)" rx="2" ry="2" />
<text  x="56.44" y="495.5" ></text>
</g>
<g >
<title>do_fault (1 samples, 0.09%)</title><rect x="30.2" y="181" width="1.0" height="15.0" fill="rgb(248,171,25)" rx="2" ry="2" />
<text  x="33.21" y="191.5" ></text>
</g>
<g >
<title>vfs_statx (1 samples, 0.09%)</title><rect x="11.0" y="597" width="1.0" height="15.0" fill="rgb(210,211,0)" rx="2" ry="2" />
<text  x="14.01" y="607.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.09%)</title><rect x="12.0" y="629" width="1.0" height="15.0" fill="rgb(226,173,41)" rx="2" ry="2" />
<text  x="15.02" y="639.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (4 samples, 0.34%)</title><rect x="75.7" y="373" width="4.0" height="15.0" fill="rgb(228,70,10)" rx="2" ry="2" />
<text  x="78.67" y="383.5" ></text>
</g>
<g >
<title>filemap_map_pages (1 samples, 0.09%)</title><rect x="30.2" y="165" width="1.0" height="15.0" fill="rgb(254,67,12)" rx="2" ry="2" />
<text  x="33.21" y="175.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.17%)</title><rect x="1040.5" y="597" width="2.0" height="15.0" fill="rgb(223,0,32)" rx="2" ry="2" />
<text  x="1043.48" y="607.5" ></text>
</g>
<g >
<title>legitimize_links (1 samples, 0.09%)</title><rect x="11.0" y="501" width="1.0" height="15.0" fill="rgb(230,115,2)" rx="2" ry="2" />
<text  x="14.01" y="511.5" ></text>
</g>
<g >
<title>do_group_exit (1 samples, 0.09%)</title><rect x="166.6" y="693" width="1.0" height="15.0" fill="rgb(207,26,28)" rx="2" ry="2" />
<text  x="169.59" y="703.5" ></text>
</g>
<g >
<title>raw_reader_v2 (128 samples, 10.96%)</title><rect x="37.3" y="757" width="129.3" height="15.0" fill="rgb(210,110,27)" rx="2" ry="2" />
<text  x="40.28" y="767.5" >raw_reader_v2</text>
</g>
<g >
<title>vfs_statx_fd (1 samples, 0.09%)</title><rect x="24.1" y="661" width="1.1" height="15.0" fill="rgb(227,183,35)" rx="2" ry="2" />
<text  x="27.14" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.09%)</title><rect x="74.7" y="405" width="1.0" height="15.0" fill="rgb(230,80,42)" rx="2" ry="2" />
<text  x="77.66" y="415.5" ></text>
</g>
<g >
<title>ext4_release_dir (1 samples, 0.09%)</title><rect x="23.1" y="629" width="1.0" height="15.0" fill="rgb(222,190,51)" rx="2" ry="2" />
<text  x="26.13" y="639.5" ></text>
</g>
<g >
<title>copy_page_range (4 samples, 0.34%)</title><rect x="26.2" y="613" width="4.0" height="15.0" fill="rgb(226,57,6)" rx="2" ry="2" />
<text  x="29.16" y="623.5" ></text>
</g>
<g >
<title>node::Environment::CheckImmediate (1 samples, 0.09%)</title><rect x="32.2" y="645" width="1.0" height="15.0" fill="rgb(247,127,37)" rx="2" ry="2" />
<text  x="35.23" y="655.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="24.1" y="709" width="1.1" height="15.0" fill="rgb(229,64,33)" rx="2" ry="2" />
<text  x="27.14" y="719.5" ></text>
</g>
<g >
<title>parquet::LevelDecoder::Decode (1 samples, 0.09%)</title><rect x="143.4" y="741" width="1.0" height="15.0" fill="rgb(219,145,46)" rx="2" ry="2" />
<text  x="146.36" y="751.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="24.1" y="725" width="1.1" height="15.0" fill="rgb(218,187,14)" rx="2" ry="2" />
<text  x="27.14" y="735.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.09%)</title><rect x="24.1" y="629" width="1.1" height="15.0" fill="rgb(243,205,30)" rx="2" ry="2" />
<text  x="27.14" y="639.5" ></text>
</g>
<g >
<title>Builtins_JSBuiltinsConstructStub (1 samples, 0.09%)</title><rect x="31.2" y="229" width="1.0" height="15.0" fill="rgb(209,1,46)" rx="2" ry="2" />
<text  x="34.22" y="239.5" ></text>
</g>
<g >
<title>ksys_read (1 samples, 0.09%)</title><rect x="10.0" y="677" width="1.0" height="15.0" fill="rgb(212,56,26)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>blk_mq_sched_dispatch_requests (1 samples, 0.09%)</title><rect x="91.8" y="373" width="1.0" height="15.0" fill="rgb(250,217,25)" rx="2" ry="2" />
<text  x="94.83" y="383.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (2 samples, 0.17%)</title><rect x="39.3" y="597" width="2.0" height="15.0" fill="rgb(234,90,6)" rx="2" ry="2" />
<text  x="42.30" y="607.5" ></text>
</g>
<g >
<title>unmap_vmas (2 samples, 0.17%)</title><rect x="33.2" y="581" width="2.1" height="15.0" fill="rgb(233,186,51)" rx="2" ry="2" />
<text  x="36.24" y="591.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (7 samples, 0.60%)</title><rect x="79.7" y="389" width="7.1" height="15.0" fill="rgb(242,173,24)" rx="2" ry="2" />
<text  x="82.71" y="399.5" ></text>
</g>
<g >
<title>__vfs_read (1 samples, 0.09%)</title><rect x="10.0" y="645" width="1.0" height="15.0" fill="rgb(250,60,22)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="53.4" y="661" width="1.1" height="15.0" fill="rgb(223,93,45)" rx="2" ry="2" />
<text  x="56.44" y="671.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.09%)</title><rect x="1038.5" y="549" width="1.0" height="15.0" fill="rgb(237,204,43)" rx="2" ry="2" />
<text  x="1041.46" y="559.5" ></text>
</g>
<g >
<title>__ext4_iget (2 samples, 0.17%)</title><rect x="19.1" y="517" width="2.0" height="15.0" fill="rgb(238,168,3)" rx="2" ry="2" />
<text  x="22.09" y="527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.09%)</title><rect x="36.3" y="693" width="1.0" height="15.0" fill="rgb(232,148,2)" rx="2" ry="2" />
<text  x="39.27" y="703.5" ></text>
</g>
<g >
<title>irq_exit (2 samples, 0.17%)</title><rect x="1038.5" y="597" width="2.0" height="15.0" fill="rgb(237,143,10)" rx="2" ry="2" />
<text  x="1041.46" y="607.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (43 samples, 3.68%)</title><rect x="54.5" y="597" width="43.4" height="15.0" fill="rgb(226,194,37)" rx="2" ry="2" />
<text  x="57.45" y="607.5" >ext4..</text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="21.1" y="613" width="1.0" height="15.0" fill="rgb(209,57,39)" rx="2" ry="2" />
<text  x="24.11" y="623.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="30.2" y="373" width="1.0" height="15.0" fill="rgb(239,40,49)" rx="2" ry="2" />
<text  x="33.21" y="383.5" ></text>
</g>
<g >
<title>node::SpinEventLoop (3 samples, 0.26%)</title><rect x="30.2" y="693" width="3.0" height="15.0" fill="rgb(219,43,2)" rx="2" ry="2" />
<text  x="33.21" y="703.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (1 samples, 0.09%)</title><rect x="91.8" y="453" width="1.0" height="15.0" fill="rgb(214,186,46)" rx="2" ry="2" />
<text  x="94.83" y="463.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.17%)</title><rect x="1038.5" y="613" width="2.0" height="15.0" fill="rgb(240,183,32)" rx="2" ry="2" />
<text  x="1041.46" y="623.5" ></text>
</g>
<g >
<title>blk_mq_sched_insert_request (1 samples, 0.09%)</title><rect x="17.1" y="405" width="1.0" height="15.0" fill="rgb(227,187,12)" rx="2" ry="2" />
<text  x="20.07" y="415.5" ></text>
</g>
<g >
<title>async_page_fault (1 samples, 0.09%)</title><rect x="53.4" y="709" width="1.1" height="15.0" fill="rgb(239,205,49)" rx="2" ry="2" />
<text  x="56.44" y="719.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (1 samples, 0.09%)</title><rect x="30.2" y="549" width="1.0" height="15.0" fill="rgb(252,90,47)" rx="2" ry="2" />
<text  x="33.21" y="559.5" ></text>
</g>
<g >
<title>rh_timer_func (1 samples, 0.09%)</title><rect x="1039.5" y="517" width="1.0" height="15.0" fill="rgb(239,47,1)" rx="2" ry="2" />
<text  x="1042.47" y="527.5" ></text>
</g>
<g >
<title>__pte_alloc (1 samples, 0.09%)</title><rect x="29.2" y="581" width="1.0" height="15.0" fill="rgb(205,106,5)" rx="2" ry="2" />
<text  x="32.20" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (21 samples, 1.80%)</title><rect x="65.6" y="453" width="21.2" height="15.0" fill="rgb(241,18,13)" rx="2" ry="2" />
<text  x="68.57" y="463.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="53.4" y="613" width="1.1" height="15.0" fill="rgb(206,64,44)" rx="2" ry="2" />
<text  x="56.44" y="623.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.43%)</title><rect x="25.2" y="725" width="5.0" height="15.0" fill="rgb(245,30,37)" rx="2" ry="2" />
<text  x="28.15" y="735.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::AddInputsToFrameStateDescriptor (1 samples, 0.09%)</title><rect x="35.3" y="389" width="1.0" height="15.0" fill="rgb(224,25,52)" rx="2" ry="2" />
<text  x="38.26" y="399.5" ></text>
</g>
<g >
<title>generic_make_request (1 samples, 0.09%)</title><rect x="17.1" y="437" width="1.0" height="15.0" fill="rgb(222,139,4)" rx="2" ry="2" />
<text  x="20.07" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.26%)</title><rect x="38.3" y="693" width="3.0" height="15.0" fill="rgb(249,121,53)" rx="2" ry="2" />
<text  x="41.29" y="703.5" ></text>
</g>
<g >
<title>do_epoll_wait (1 samples, 0.09%)</title><rect x="12.0" y="661" width="1.0" height="15.0" fill="rgb(249,85,45)" rx="2" ry="2" />
<text  x="15.02" y="671.5" ></text>
</g>
<g >
<title>[unknown] (60 samples, 5.14%)</title><rect x="38.3" y="741" width="60.6" height="15.0" fill="rgb(217,54,10)" rx="2" ry="2" />
<text  x="41.29" y="751.5" >[unkno..</text>
</g>
<g >
<title>schedule_idle (1 samples, 0.09%)</title><rect x="1189.0" y="613" width="1.0" height="15.0" fill="rgb(238,196,49)" rx="2" ry="2" />
<text  x="1191.99" y="623.5" ></text>
</g>
<g >
<title>napi_complete_done (1 samples, 0.09%)</title><rect x="1041.5" y="533" width="1.0" height="15.0" fill="rgb(232,178,42)" rx="2" ry="2" />
<text  x="1044.49" y="543.5" ></text>
</g>
<g >
<title>do_idle (145 samples, 12.41%)</title><rect x="1043.5" y="629" width="146.5" height="15.0" fill="rgb(241,186,33)" rx="2" ry="2" />
<text  x="1046.51" y="639.5" >do_idle</text>
</g>
<g >
<title>[git] (1 samples, 0.09%)</title><rect x="14.0" y="741" width="1.1" height="15.0" fill="rgb(248,187,45)" rx="2" ry="2" />
<text  x="17.04" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.09%)</title><rect x="167.6" y="741" width="1.0" height="15.0" fill="rgb(220,56,0)" rx="2" ry="2" />
<text  x="170.60" y="751.5" ></text>
</g>
<g >
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="30.2" y="277" width="1.0" height="15.0" fill="rgb(210,65,11)" rx="2" ry="2" />
<text  x="33.21" y="287.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="405" width="1.0" height="15.0" fill="rgb(222,165,39)" rx="2" ry="2" />
<text  x="34.22" y="415.5" ></text>
</g>
<g >
<title>__blk_mq_delay_run_hw_queue (1 samples, 0.09%)</title><rect x="17.1" y="373" width="1.0" height="15.0" fill="rgb(207,110,48)" rx="2" ry="2" />
<text  x="20.07" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.17%)</title><rect x="1038.5" y="581" width="2.0" height="15.0" fill="rgb(225,146,46)" rx="2" ry="2" />
<text  x="1041.46" y="591.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.09%)</title><rect x="166.6" y="629" width="1.0" height="15.0" fill="rgb(233,170,24)" rx="2" ry="2" />
<text  x="169.59" y="639.5" ></text>
</g>
<g >
<title>do_page_fault (21 samples, 1.80%)</title><rect x="65.6" y="485" width="21.2" height="15.0" fill="rgb(250,216,48)" rx="2" ry="2" />
<text  x="68.57" y="495.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1 samples, 0.09%)</title><rect x="41.3" y="725" width="1.0" height="15.0" fill="rgb(216,49,21)" rx="2" ry="2" />
<text  x="44.32" y="735.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (145 samples, 12.41%)</title><rect x="1043.5" y="709" width="146.5" height="15.0" fill="rgb(219,164,35)" rx="2" ry="2" />
<text  x="1046.51" y="719.5" >x86_64_start_reser..</text>
</g>
<g >
<title>ext4_alloc_inode (1 samples, 0.09%)</title><rect x="20.1" y="469" width="1.0" height="15.0" fill="rgb(247,102,49)" rx="2" ry="2" />
<text  x="23.10" y="479.5" ></text>
</g>
<g >
<title>do_page_fault (1 samples, 0.09%)</title><rect x="30.2" y="261" width="1.0" height="15.0" fill="rgb(210,11,12)" rx="2" ry="2" />
<text  x="33.21" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_newstat (1 samples, 0.09%)</title><rect x="11.0" y="629" width="1.0" height="15.0" fill="rgb(233,18,13)" rx="2" ry="2" />
<text  x="14.01" y="639.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="325" width="1.0" height="15.0" fill="rgb(253,134,44)" rx="2" ry="2" />
<text  x="34.22" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_madvise (3 samples, 0.26%)</title><rect x="38.3" y="677" width="3.0" height="15.0" fill="rgb(242,140,38)" rx="2" ry="2" />
<text  x="41.29" y="687.5" ></text>
</g>
<g >
<title>read (1 samples, 0.09%)</title><rect x="36.3" y="709" width="1.0" height="15.0" fill="rgb(244,117,50)" rx="2" ry="2" />
<text  x="39.27" y="719.5" ></text>
</g>
<g >
<title>arrow::util::RleDecoder::GetBatchWithDict&lt;double&gt; (3 samples, 0.26%)</title><rect x="109.0" y="741" width="3.0" height="15.0" fill="rgb(229,118,4)" rx="2" ry="2" />
<text  x="112.01" y="751.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.09%)</title><rect x="1041.5" y="373" width="1.0" height="15.0" fill="rgb(229,3,5)" rx="2" ry="2" />
<text  x="1044.49" y="383.5" ></text>
</g>
<g >
<title>filemap_fault (1 samples, 0.09%)</title><rect x="53.4" y="549" width="1.1" height="15.0" fill="rgb(213,101,3)" rx="2" ry="2" />
<text  x="56.44" y="559.5" ></text>
</g>
<g >
<title>arch_cpu_idle (865 samples, 74.06%)</title><rect x="168.6" y="661" width="873.9" height="15.0" fill="rgb(242,101,34)" rx="2" ry="2" />
<text  x="171.61" y="671.5" >arch_cpu_idle</text>
</g>
<g >
<title>__xstat64 (1 samples, 0.09%)</title><rect x="11.0" y="677" width="1.0" height="15.0" fill="rgb(243,167,20)" rx="2" ry="2" />
<text  x="14.01" y="687.5" ></text>
</g>
<g >
<title>__lookup_slow (4 samples, 0.34%)</title><rect x="17.1" y="549" width="4.0" height="15.0" fill="rgb(243,92,42)" rx="2" ry="2" />
<text  x="20.07" y="559.5" ></text>
</g>
<g >
<title>do_async_page_fault (1 samples, 0.09%)</title><rect x="53.4" y="693" width="1.1" height="15.0" fill="rgb(231,93,18)" rx="2" ry="2" />
<text  x="56.44" y="703.5" ></text>
</g>
<g >
<title>arch_call_rest_init (145 samples, 12.41%)</title><rect x="1043.5" y="677" width="146.5" height="15.0" fill="rgb(209,131,24)" rx="2" ry="2" />
<text  x="1046.51" y="687.5" >arch_call_rest_init</text>
</g>
<g >
<title>__page_cache_alloc (5 samples, 0.43%)</title><rect x="86.8" y="501" width="5.0" height="15.0" fill="rgb(254,136,23)" rx="2" ry="2" />
<text  x="89.78" y="511.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="94.9" y="389" width="1.0" height="15.0" fill="rgb(222,29,54)" rx="2" ry="2" />
<text  x="97.86" y="399.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::SelectInstructions (1 samples, 0.09%)</title><rect x="35.3" y="613" width="1.0" height="15.0" fill="rgb(213,178,25)" rx="2" ry="2" />
<text  x="38.26" y="623.5" ></text>
</g>
<g >
<title>exit_mmap (2 samples, 0.17%)</title><rect x="33.2" y="597" width="2.1" height="15.0" fill="rgb(246,175,28)" rx="2" ry="2" />
<text  x="36.24" y="607.5" ></text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.09%)</title><rect x="1189.0" y="581" width="1.0" height="15.0" fill="rgb(252,157,46)" rx="2" ry="2" />
<text  x="1191.99" y="591.5" ></text>
</g>
<g >
<title>cpu_startup_entry (866 samples, 74.14%)</title><rect x="168.6" y="709" width="874.9" height="15.0" fill="rgb(252,17,36)" rx="2" ry="2" />
<text  x="171.61" y="719.5" >cpu_startup_entry</text>
</g>
<g >
<title>filename_lookup (1 samples, 0.09%)</title><rect x="11.0" y="565" width="1.0" height="15.0" fill="rgb(225,225,0)" rx="2" ry="2" />
<text  x="14.01" y="575.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.09%)</title><rect x="1041.5" y="293" width="1.0" height="15.0" fill="rgb(214,225,7)" rx="2" ry="2" />
<text  x="1044.49" y="303.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="31.2" y="53" width="1.0" height="15.0" fill="rgb(212,29,37)" rx="2" ry="2" />
<text  x="34.22" y="63.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="30.2" y="245" width="1.0" height="15.0" fill="rgb(220,76,2)" rx="2" ry="2" />
<text  x="33.21" y="255.5" ></text>
</g>
<g >
<title>copy_process (5 samples, 0.43%)</title><rect x="25.2" y="661" width="5.0" height="15.0" fill="rgb(234,116,26)" rx="2" ry="2" />
<text  x="28.15" y="671.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="36.3" y="677" width="1.0" height="15.0" fill="rgb(248,229,17)" rx="2" ry="2" />
<text  x="39.27" y="687.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.09%)</title><rect x="10.0" y="661" width="1.0" height="15.0" fill="rgb(226,153,9)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.09%)</title><rect x="166.6" y="597" width="1.0" height="15.0" fill="rgb(232,18,48)" rx="2" ry="2" />
<text  x="169.59" y="607.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="389" width="1.0" height="15.0" fill="rgb(248,176,41)" rx="2" ry="2" />
<text  x="34.22" y="399.5" ></text>
</g>
<g >
<title>async_page_fault (1 samples, 0.09%)</title><rect x="31.2" y="101" width="1.0" height="15.0" fill="rgb(229,143,16)" rx="2" ry="2" />
<text  x="34.22" y="111.5" ></text>
</g>
<g >
<title>parquet::(anonymous namespace)::PlainDecoder&lt;parquet::PhysicalType&lt; (2 samples, 0.17%)</title><rect x="133.3" y="741" width="2.0" height="15.0" fill="rgb(212,129,19)" rx="2" ry="2" />
<text  x="136.25" y="751.5" ></text>
</g>
<g >
<title>do_wp_page (1 samples, 0.09%)</title><rect x="21.1" y="565" width="1.0" height="15.0" fill="rgb(229,123,21)" rx="2" ry="2" />
<text  x="24.11" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (12 samples, 1.03%)</title><rect x="74.7" y="437" width="12.1" height="15.0" fill="rgb(217,36,14)" rx="2" ry="2" />
<text  x="77.66" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_current (1 samples, 0.09%)</title><rect x="29.2" y="549" width="1.0" height="15.0" fill="rgb(217,229,18)" rx="2" ry="2" />
<text  x="32.20" y="559.5" ></text>
</g>
<g >
<title>proc_single_show (1 samples, 0.09%)</title><rect x="10.0" y="613" width="1.0" height="15.0" fill="rgb(209,192,29)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge (6 samples, 0.51%)</title><rect x="80.7" y="373" width="6.1" height="15.0" fill="rgb(247,210,18)" rx="2" ry="2" />
<text  x="83.72" y="383.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="197" width="1.0" height="15.0" fill="rgb(214,63,43)" rx="2" ry="2" />
<text  x="34.22" y="207.5" ></text>
</g>
<g >
<title>ll_rw_block (1 samples, 0.09%)</title><rect x="17.1" y="485" width="1.0" height="15.0" fill="rgb(234,187,20)" rx="2" ry="2" />
<text  x="20.07" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_newfstat (1 samples, 0.09%)</title><rect x="24.1" y="693" width="1.1" height="15.0" fill="rgb(222,184,9)" rx="2" ry="2" />
<text  x="27.14" y="703.5" ></text>
</g>
<g >
<title>start_kernel (145 samples, 12.41%)</title><rect x="1043.5" y="693" width="146.5" height="15.0" fill="rgb(242,158,9)" rx="2" ry="2" />
<text  x="1046.51" y="703.5" >start_kernel</text>
</g>
<g >
<title>__x64_sys_epoll_wait (1 samples, 0.09%)</title><rect x="12.0" y="677" width="1.0" height="15.0" fill="rgb(248,83,38)" rx="2" ry="2" />
<text  x="15.02" y="687.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (1 samples, 0.09%)</title><rect x="166.6" y="613" width="1.0" height="15.0" fill="rgb(229,21,15)" rx="2" ry="2" />
<text  x="169.59" y="623.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="91.8" y="309" width="1.0" height="15.0" fill="rgb(249,88,41)" rx="2" ry="2" />
<text  x="94.83" y="319.5" ></text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (1 samples, 0.09%)</title><rect x="31.2" y="597" width="1.0" height="15.0" fill="rgb(249,161,0)" rx="2" ry="2" />
<text  x="34.22" y="607.5" ></text>
</g>
<g >
<title>path_lookupat.isra.0 (1 samples, 0.09%)</title><rect x="11.0" y="549" width="1.0" height="15.0" fill="rgb(213,221,5)" rx="2" ry="2" />
<text  x="14.01" y="559.5" ></text>
</g>
<g >
<title>native_safe_halt (144 samples, 12.33%)</title><rect x="1043.5" y="581" width="145.5" height="15.0" fill="rgb(214,100,50)" rx="2" ry="2" />
<text  x="1046.51" y="591.5" >native_safe_halt</text>
</g>
<g >
<title>try_charge (1 samples, 0.09%)</title><rect x="93.9" y="405" width="1.0" height="15.0" fill="rgb(210,121,22)" rx="2" ry="2" />
<text  x="96.85" y="415.5" ></text>
</g>
<g >
<title>ext4fs_dirhash (1 samples, 0.09%)</title><rect x="18.1" y="469" width="1.0" height="15.0" fill="rgb(241,111,13)" rx="2" ry="2" />
<text  x="21.08" y="479.5" ></text>
</g>
<g >
<title>virtio_queue_rq (1 samples, 0.09%)</title><rect x="91.8" y="325" width="1.0" height="15.0" fill="rgb(223,222,46)" rx="2" ry="2" />
<text  x="94.83" y="335.5" ></text>
</g>
<g >
<title>usb_hcd_poll_rh_status (1 samples, 0.09%)</title><rect x="1039.5" y="501" width="1.0" height="15.0" fill="rgb(206,117,1)" rx="2" ry="2" />
<text  x="1042.47" y="511.5" ></text>
</g>
<g >
<title>__handle_mm_fault (12 samples, 1.03%)</title><rect x="74.7" y="421" width="12.1" height="15.0" fill="rgb(220,225,36)" rx="2" ry="2" />
<text  x="77.66" y="431.5" ></text>
</g>
<g >
<title>ret_from_intr (2 samples, 0.17%)</title><rect x="1040.5" y="629" width="2.0" height="15.0" fill="rgb(227,19,8)" rx="2" ry="2" />
<text  x="1043.48" y="639.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (1 samples, 0.09%)</title><rect x="29.2" y="533" width="1.0" height="15.0" fill="rgb(249,39,47)" rx="2" ry="2" />
<text  x="32.20" y="543.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1 samples, 0.09%)</title><rect x="167.6" y="661" width="1.0" height="15.0" fill="rgb(251,168,7)" rx="2" ry="2" />
<text  x="170.60" y="671.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.09%)</title><rect x="1041.5" y="405" width="1.0" height="15.0" fill="rgb(218,183,28)" rx="2" ry="2" />
<text  x="1044.49" y="415.5" ></text>
</g>
<g >
<title>uv__chld (1 samples, 0.09%)</title><rect x="30.2" y="629" width="1.0" height="15.0" fill="rgb(232,11,50)" rx="2" ry="2" />
<text  x="33.21" y="639.5" ></text>
</g>
<g >
<title>blk_flush_plug_list (1 samples, 0.09%)</title><rect x="91.8" y="469" width="1.0" height="15.0" fill="rgb(217,201,4)" rx="2" ry="2" />
<text  x="94.83" y="479.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.09%)</title><rect x="30.2" y="197" width="1.0" height="15.0" fill="rgb(219,155,10)" rx="2" ry="2" />
<text  x="33.21" y="207.5" ></text>
</g>
<g >
<title>iget_locked (1 samples, 0.09%)</title><rect x="20.1" y="501" width="1.0" height="15.0" fill="rgb(207,35,5)" rx="2" ry="2" />
<text  x="23.10" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (5 samples, 0.43%)</title><rect x="16.1" y="709" width="5.0" height="15.0" fill="rgb(249,111,19)" rx="2" ry="2" />
<text  x="19.06" y="719.5" ></text>
</g>
<g >
<title>v8::Function::Call (1 samples, 0.09%)</title><rect x="30.2" y="565" width="1.0" height="15.0" fill="rgb(250,219,26)" rx="2" ry="2" />
<text  x="33.21" y="575.5" ></text>
</g>
<g >
<title>ext4_bread_batch (1 samples, 0.09%)</title><rect x="17.1" y="501" width="1.0" height="15.0" fill="rgb(214,3,2)" rx="2" ry="2" />
<text  x="20.07" y="511.5" ></text>
</g>
<g >
<title>dup_mmap (5 samples, 0.43%)</title><rect x="25.2" y="629" width="5.0" height="15.0" fill="rgb(212,165,49)" rx="2" ry="2" />
<text  x="28.15" y="639.5" ></text>
</g>
<g >
<title>call_timer_fn (1 samples, 0.09%)</title><rect x="1039.5" y="533" width="1.0" height="15.0" fill="rgb(246,97,12)" rx="2" ry="2" />
<text  x="1042.47" y="543.5" ></text>
</g>
<g >
<title>uv_run (3 samples, 0.26%)</title><rect x="30.2" y="677" width="3.0" height="15.0" fill="rgb(235,55,0)" rx="2" ry="2" />
<text  x="33.21" y="687.5" ></text>
</g>
<g >
<title>__do_page_cache_readahead (1 samples, 0.09%)</title><rect x="53.4" y="533" width="1.1" height="15.0" fill="rgb(230,94,20)" rx="2" ry="2" />
<text  x="56.44" y="543.5" ></text>
</g>
<g >
<title>free_rb_tree_fname (1 samples, 0.09%)</title><rect x="23.1" y="613" width="1.0" height="15.0" fill="rgb(226,143,19)" rx="2" ry="2" />
<text  x="26.13" y="623.5" ></text>
</g>
<g >
<title>blk_mq_run_hw_queue (1 samples, 0.09%)</title><rect x="17.1" y="389" width="1.0" height="15.0" fill="rgb(219,72,14)" rx="2" ry="2" />
<text  x="20.07" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_read (1 samples, 0.09%)</title><rect x="10.0" y="693" width="1.0" height="15.0" fill="rgb(243,59,41)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>generic_file_read_iter (43 samples, 3.68%)</title><rect x="54.5" y="581" width="43.4" height="15.0" fill="rgb(217,45,8)" rx="2" ry="2" />
<text  x="57.45" y="591.5" >gene..</text>
</g>
<g >
<title>process_fetch_insn (1 samples, 0.09%)</title><rect x="167.6" y="581" width="1.0" height="15.0" fill="rgb(225,213,0)" rx="2" ry="2" />
<text  x="170.60" y="591.5" ></text>
</g>
<g >
<title>user_path_at_empty (4 samples, 0.34%)</title><rect x="17.1" y="629" width="4.0" height="15.0" fill="rgb(252,215,33)" rx="2" ry="2" />
<text  x="20.07" y="639.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.09%)</title><rect x="13.0" y="709" width="1.0" height="15.0" fill="rgb(211,149,49)" rx="2" ry="2" />
<text  x="16.03" y="719.5" ></text>
</g>
<g >
<title>[perf-1418.map] (1 samples, 0.09%)</title><rect x="31.2" y="309" width="1.0" height="15.0" fill="rgb(216,149,42)" rx="2" ry="2" />
<text  x="34.22" y="319.5" ></text>
</g>
<g >
<title>dx_probe (1 samples, 0.09%)</title><rect x="18.1" y="485" width="1.0" height="15.0" fill="rgb(253,134,44)" rx="2" ry="2" />
<text  x="21.08" y="495.5" ></text>
</g>
<g >
<title>ext4_filemap_fault (1 samples, 0.09%)</title><rect x="53.4" y="565" width="1.1" height="15.0" fill="rgb(225,76,21)" rx="2" ry="2" />
<text  x="56.44" y="575.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (1 samples, 0.09%)</title><rect x="30.2" y="581" width="1.0" height="15.0" fill="rgb(223,215,22)" rx="2" ry="2" />
<text  x="33.21" y="591.5" ></text>
</g>
<g >
<title>arrow::util::RleDecoder::GetBatchWithDict&lt;long&gt; (11 samples, 0.94%)</title><rect x="112.0" y="741" width="11.2" height="15.0" fill="rgb(225,221,6)" rx="2" ry="2" />
<text  x="115.04" y="751.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (1 samples, 0.09%)</title><rect x="31.2" y="501" width="1.0" height="15.0" fill="rgb(248,207,2)" rx="2" ry="2" />
<text  x="34.22" y="511.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::AddInputsToFrameStateDescriptor (1 samples, 0.09%)</title><rect x="35.3" y="453" width="1.0" height="15.0" fill="rgb(220,181,31)" rx="2" ry="2" />
<text  x="38.26" y="463.5" ></text>
</g>
<g >
<title>ip_list_rcv (1 samples, 0.09%)</title><rect x="1041.5" y="469" width="1.0" height="15.0" fill="rgb(228,8,38)" rx="2" ry="2" />
<text  x="1044.49" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.09%)</title><rect x="167.6" y="677" width="1.0" height="15.0" fill="rgb(247,164,34)" rx="2" ry="2" />
<text  x="170.60" y="687.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.09%)</title><rect x="1189.0" y="597" width="1.0" height="15.0" fill="rgb(211,3,42)" rx="2" ry="2" />
<text  x="1191.99" y="607.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.09%)</title><rect x="1041.5" y="421" width="1.0" height="15.0" fill="rgb(239,201,29)" rx="2" ry="2" />
<text  x="1044.49" y="431.5" ></text>
</g>
<g >
<title>execve (2 samples, 0.17%)</title><rect x="33.2" y="741" width="2.1" height="15.0" fill="rgb(213,33,11)" rx="2" ry="2" />
<text  x="36.24" y="751.5" ></text>
</g>
<g >
<title>kblockd_mod_delayed_work_on (1 samples, 0.09%)</title><rect x="17.1" y="357" width="1.0" height="15.0" fill="rgb(218,94,46)" rx="2" ry="2" />
<text  x="20.07" y="367.5" ></text>
</g>
<g >
<title>__lock_text_start (1 samples, 0.09%)</title><rect x="1039.5" y="469" width="1.0" height="15.0" fill="rgb(231,73,52)" rx="2" ry="2" />
<text  x="1042.47" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (1 samples, 0.09%)</title><rect x="165.6" y="693" width="1.0" height="15.0" fill="rgb(224,69,18)" rx="2" ry="2" />
<text  x="168.58" y="703.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (3 samples, 0.26%)</title><rect x="30.2" y="709" width="3.0" height="15.0" fill="rgb(247,185,11)" rx="2" ry="2" />
<text  x="33.21" y="719.5" ></text>
</g>
<g >
<title>copy_pte_range.isra.0 (4 samples, 0.34%)</title><rect x="26.2" y="597" width="4.0" height="15.0" fill="rgb(222,33,25)" rx="2" ry="2" />
<text  x="29.16" y="607.5" ></text>
</g>
<g >
<title>node::(anonymous namespace)::ProcessWrap::OnExit (1 samples, 0.09%)</title><rect x="30.2" y="613" width="1.0" height="15.0" fill="rgb(252,85,47)" rx="2" ry="2" />
<text  x="33.21" y="623.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::EmitWithContinuation (1 samples, 0.09%)</title><rect x="35.3" y="485" width="1.0" height="15.0" fill="rgb(219,72,29)" rx="2" ry="2" />
<text  x="38.26" y="495.5" ></text>
</g>
<g >
<title>blk_mq_do_dispatch_sched (1 samples, 0.09%)</title><rect x="91.8" y="357" width="1.0" height="15.0" fill="rgb(212,133,33)" rx="2" ry="2" />
<text  x="94.83" y="367.5" ></text>
</g>
<g >
<title>v8::internal::compiler::InstructionSelector::VisitNode (1 samples, 0.09%)</title><rect x="35.3" y="581" width="1.0" height="15.0" fill="rgb(237,87,8)" rx="2" ry="2" />
<text  x="38.26" y="591.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1 samples, 0.09%)</title><rect x="30.2" y="229" width="1.0" height="15.0" fill="rgb(253,34,48)" rx="2" ry="2" />
<text  x="33.21" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.09%)</title><rect x="21.1" y="629" width="1.0" height="15.0" fill="rgb(233,99,26)" rx="2" ry="2" />
<text  x="24.11" y="639.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.09%)</title><rect x="165.6" y="645" width="1.0" height="15.0" fill="rgb(234,94,8)" rx="2" ry="2" />
<text  x="168.58" y="655.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.09%)</title><rect x="1041.5" y="341" width="1.0" height="15.0" fill="rgb(231,225,47)" rx="2" ry="2" />
<text  x="1044.49" y="351.5" ></text>
</g>
<g >
<title>v8::internal::OptimizedCompilationJob::ExecuteJob (1 samples, 0.09%)</title><rect x="35.3" y="677" width="1.0" height="15.0" fill="rgb(249,44,40)" rx="2" ry="2" />
<text  x="38.26" y="687.5" ></text>
</g>
<g >
<title>__libc_start_main (3 samples, 0.26%)</title><rect x="30.2" y="741" width="3.0" height="15.0" fill="rgb(248,112,32)" rx="2" ry="2" />
<text  x="33.21" y="751.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.09%)</title><rect x="167.6" y="725" width="1.0" height="15.0" fill="rgb(251,170,50)" rx="2" ry="2" />
<text  x="170.60" y="735.5" ></text>
</g>
<g >
<title>vfs_read (43 samples, 3.68%)</title><rect x="54.5" y="645" width="43.4" height="15.0" fill="rgb(214,34,11)" rx="2" ry="2" />
<text  x="57.45" y="655.5" >vfs_..</text>
</g>
</g>
</svg>
